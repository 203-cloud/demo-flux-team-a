name: Build latest demo-app from main branch
on:
  push:
    branches:
      - main
    paths:
      - demo-app/*
      - demo-app/deploy/*
      - .github/workflows/demo-app-main.yaml

env:
  ko_version: 0.17.1
  ARTIFACT_NAME: demo-app


jobs:
  publish_image:
    name: Build latest image and publish to ghcr
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.ARTIFACT_NAME }}
    permissions:
      packages: write
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version-file: '${{ env.ARTIFACT_NAME }}/go.mod'

      - name: Build
        env:
            CGO_ENABLED: 0
        run: go build -v .

      - name: Install KO
        run: |
          curl -L https://github.com/google/ko/releases/download/v${{ env.ko_version }}/ko_${{ env.ko_version }}_Linux_x86_64.tar.gz | tar xzf - ko
          chmod +x ./ko
      - name: Publish docker image
        env:
          KO_DOCKER_REPO: ghcr.io/${{ github.repository_owner }}
          CGO_ENABLED: 0
        run: |
          ./ko login ghcr.io --username $GITHUB_REPOSITORY_OWNER --password ${{ secrets.GITHUB_TOKEN }}
          ./ko build -B .
  publish_manifest:
    name: Build latest manifest and publish to ghcr
    if: github.ref == 'refs/heads/main'
    defaults:
        run:
            working-directory: ./${{ env.ARTIFACT_NAME }}/deploy
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup flux
        uses: fluxcd/flux2/action@main
        with:
          version: latest
      - name: Build latest artifact
        run: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u USERNAME --password-stdin
            container_registry=ghcr.io/${{ github.repository }}
            artifact_name=${{ env.ARTIFACT_NAME }}-release
            flux push artifact oci://${container_registry}/${artifact_name}:$(git rev-parse --short HEAD) \
                --provider=generic \
                --reproducible \
                --path="." \
                --source="$(git config --get remote.origin.url)" \
                --revision="$(git branch --show-current)/$(git rev-parse HEAD)" || echo "Failed to push $artifact_name" >&2
            flux tag artifact oci://${container_registry}/${artifact_name}:$(git rev-parse --short HEAD) \
                --provider=generic \
                --tag latest || echo "Failed to tag $artifact_name" >&2